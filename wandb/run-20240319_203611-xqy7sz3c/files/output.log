
  0%|          | 0/20583 [00:00<?, ?it/s]C:\Users\CYP\AppData\Local\Temp\ipykernel_64416\757422201.py:39: UserWarning: Using a target size (torch.Size([32, 32])) that is different to the input size (torch.Size([32])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  elif loss_type == "smooth_l1":loss = F.smooth_l1_loss(q_pred, bellman_target)








































































































































24502it [04:37, 88.33it/s]
C:\Users\CYP\AppData\Local\Temp\ipykernel_64416\757422201.py:72: UserWarning: Using a target size (torch.Size([256, 256])) that is different to the input size (torch.Size([256])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  elif loss_type == "smooth_l1":loss = F.smooth_l1_loss(q_pred, bellman_target)
C:\Users\CYP\AppData\Local\Temp\ipykernel_64416\757422201.py:72: UserWarning: Using a target size (torch.Size([77, 77])) that is different to the input size (torch.Size([77])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  elif loss_type == "smooth_l1":loss = F.smooth_l1_loss(q_pred, bellman_target)
  0%|          | 0/20583 [00:00<?, ?it/s]C:\Users\CYP\AppData\Local\Temp\ipykernel_64416\757422201.py:39: UserWarning: Using a target size (torch.Size([32, 32])) that is different to the input size (torch.Size([32])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  elif loss_type == "smooth_l1":loss = F.smooth_l1_loss(q_pred, bellman_target)









































































































































24502it [04:37, 88.26it/s]
C:\Users\CYP\AppData\Local\Temp\ipykernel_64416\757422201.py:72: UserWarning: Using a target size (torch.Size([256, 256])) that is different to the input size (torch.Size([256])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  elif loss_type == "smooth_l1":loss = F.smooth_l1_loss(q_pred, bellman_target)
C:\Users\CYP\AppData\Local\Temp\ipykernel_64416\757422201.py:72: UserWarning: Using a target size (torch.Size([77, 77])) that is different to the input size (torch.Size([77])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  elif loss_type == "smooth_l1":loss = F.smooth_l1_loss(q_pred, bellman_target)
  0%|          | 0/20583 [00:00<?, ?it/s]C:\Users\CYP\AppData\Local\Temp\ipykernel_64416\757422201.py:39: UserWarning: Using a target size (torch.Size([32, 32])) that is different to the input size (torch.Size([32])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  elif loss_type == "smooth_l1":loss = F.smooth_l1_loss(q_pred, bellman_target)












































































































































24502it [04:44, 86.06it/s]
C:\Users\CYP\AppData\Local\Temp\ipykernel_64416\757422201.py:72: UserWarning: Using a target size (torch.Size([256, 256])) that is different to the input size (torch.Size([256])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  elif loss_type == "smooth_l1":loss = F.smooth_l1_loss(q_pred, bellman_target)
C:\Users\CYP\AppData\Local\Temp\ipykernel_64416\757422201.py:72: UserWarning: Using a target size (torch.Size([77, 77])) that is different to the input size (torch.Size([77])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  elif loss_type == "smooth_l1":loss = F.smooth_l1_loss(q_pred, bellman_target)
  0%|          | 0/20583 [00:00<?, ?it/s]C:\Users\CYP\AppData\Local\Temp\ipykernel_64416\757422201.py:39: UserWarning: Using a target size (torch.Size([32, 32])) that is different to the input size (torch.Size([32])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  elif loss_type == "smooth_l1":loss = F.smooth_l1_loss(q_pred, bellman_target)








































